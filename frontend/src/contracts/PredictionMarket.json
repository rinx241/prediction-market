{
  "contractName": "PredictionMarket",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "accountAdress",
          "type": "address"
        }
      ],
      "name": "LogEnrolled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "accountAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "LogPlaceBet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "enum PredictionMarket.Side",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "bets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "enum PredictionMarket.Side",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "betsPerGambler",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "enrolled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CircuitBreaker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum PredictionMarket.Side",
          "name": "_side",
          "type": "uint8"
        }
      ],
      "name": "placeBet",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "enroll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum PredictionMarket.Side",
          "name": "_side",
          "type": "uint8"
        }
      ],
      "name": "amountBet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "withdrawGain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum PredictionMarket.Side",
          "name": "_winner",
          "type": "uint8"
        },
        {
          "internalType": "enum PredictionMarket.Side",
          "name": "_loser",
          "type": "uint8"
        }
      ],
      "name": "reportResult",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.3+commit.9bfce1f6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"accountAdress\",\"type\":\"address\"}],\"name\":\"LogEnrolled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"accountAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LogPlaceBet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CircuitBreaker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum PredictionMarket.Side\",\"name\":\"_side\",\"type\":\"uint8\"}],\"name\":\"amountBet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum PredictionMarket.Side\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"bets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum PredictionMarket.Side\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"betsPerGambler\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enroll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"enrolled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum PredictionMarket.Side\",\"name\":\"_side\",\"type\":\"uint8\"}],\"name\":\"placeBet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum PredictionMarket.Side\",\"name\":\"_winner\",\"type\":\"uint8\"},{\"internalType\":\"enum PredictionMarket.Side\",\"name\":\"_loser\",\"type\":\"uint8\"}],\"name\":\"reportResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawGain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/D/ConsensysAcademy/prediction market/contracts/PredictionMarket.sol\":\"PredictionMarket\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/ConsensysAcademy/prediction market/contracts/Context.sol\":{\"keccak256\":\"0x59029358238db8497ee99764d4985823e60d76d4a6deb66ff931203075a63fae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad64e95b45ddecdb0bbc4ad1e16917d1373deeda526b9655dfa85f4c33d9a9e\",\"dweb:/ipfs/QmYb1b122hAa52jFkyKk7nZxpMeMqCN3dnKEhtaQyPiobA\"]},\"/D/ConsensysAcademy/prediction market/contracts/Ownable.sol\":{\"keccak256\":\"0x8a36b79511f77e52090d1c94cb10eba30a7fa653e3c467178f5e9b2afdfea2a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e80d3d2b400f6a2e7f1f0d2096511f49c29b19c57c417fcfccc17797b4c616e\",\"dweb:/ipfs/QmNQSyoWR5LFEAPrVgrZTpEPJ5A8L86nMVCpy199JzP32d\"]},\"/D/ConsensysAcademy/prediction market/contracts/PredictionMarket.sol\":{\"keccak256\":\"0x60ef4956793f352b369104353736d8dac4910dead1d33adb0313c3a48d2b4337\",\"urls\":[\"bzz-raw://d61b8545c1c4ddc9b5428327b3b1925e5a465e8ed5edc894e9bb3caf5a39d4ed\",\"dweb:/ipfs/Qmdh684YrQjmUENaqeCUDxbV1HHbM2FDdfonjecqGPfceQ\"]}},\"version\":1}",
  "bytecode": "0x60806040526001600260016101000a81548160ff02191690831515021790555034801561002b57600080fd5b506040516112ed3803806112ed8339818101604052602081101561004e57600080fd5b8101908080519060200190929190505050600061006f61019560201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35080600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061019d565b600033905090565b611141806101ac6000396000f3fe6080604052600436106100c25760003560e01c8063715018a61161007f5780638da5cb5b116100595780638da5cb5b146102d45780639d5a373914610315578063e65f2a7e14610387578063f2fde38b146103b4576100c2565b8063715018a61461022a5780637dc0d1d0146102415780637e0ecc0014610282576100c2565b806310eb0e0e146100c75780632b539c861461012e57806333d3510514610145578063430468441461015c578063461371db1461018d5780634ec942b7146101df575b600080fd5b3480156100d357600080fd5b50610116600480360360208110156100ea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610405565b60405180821515815260200191505060405180910390f35b34801561013a57600080fd5b50610143610425565b005b34801561015157600080fd5b5061015a61076c565b005b61018b6004803603602081101561017257600080fd5b81019080803560ff169060200190929190505050610812565b005b34801561019957600080fd5b506101c9600480360360208110156101b057600080fd5b81019080803560ff169060200190929190505050610a13565b6040518082815260200191505060405180910390f35b3480156101eb57600080fd5b506102286004803603604081101561020257600080fd5b81019080803560ff169060200190929190803560ff169060200190929190505050610a83565b005b34801561023657600080fd5b5061023f610bd1565b005b34801561024d57600080fd5b50610256610d57565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561028e57600080fd5b506102be600480360360208110156102a557600080fd5b81019080803560ff169060200190929190505050610d7d565b6040518082815260200191505060405180910390f35b3480156102e057600080fd5b506102e9610d95565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032157600080fd5b506103716004803603604081101561033857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190505050610dbe565b6040518082815260200191505060405180910390f35b34801561039357600080fd5b5061039c610de3565b60405180821515815260200191505060405180910390f35b3480156103c057600080fd5b50610403600480360360208110156103d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ed2565b005b60036020528060005260406000206000915054906101000a900460ff1681565b60011515600260019054906101000a900460ff1615151461044557600080fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600160000160009054906101000a900460ff1660018111156104a657fe5b60018111156104b157fe5b815260200190815260200160002054905060008111610538576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f796f7520646f206e6f74206861766520616e792077696e6e696e67206265740081525060200191505060405180910390fd5b60011515600260009054906101000a900460ff161515146105c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f67616d65206e6f742066696e697368656420796574000000000000000000000081525060200191505060405180910390fd5b600060046000600160000160009054906101000a900460ff1660018111156105e557fe5b60018111156105f057fe5b8152602001908152602001600020548260046000600160000160019054906101000a900460ff16600181111561062257fe5b600181111561062d57fe5b815260200190815260200160002054028161064457fe5b04820190506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080600181111561069857fe5b60018111156106a357fe5b8152602001908152602001600020819055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018081111561070457fe5b600181111561070f57fe5b8152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610767573d6000803e3d6000fd5b505050565b60011515600260019054906101000a900460ff1615151461078c57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107e657600080fd5b600260019054906101000a900460ff1615600260016101000a81548160ff021916908315150217905550565b60011515600260019054906101000a900460ff1615151461083257600080fd5b60001515600260009054906101000a900460ff161515146108bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f67616d652069732066696e69736865640000000000000000000000000000000081525060200191505060405180910390fd5b34600460008360018111156108cc57fe5b60018111156108d757fe5b81526020019081526020016000206000828254019250508190555034600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083600181111561094057fe5b600181111561094b57fe5b815260200190815260200160002060008282540192505081905550600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008260018111156109b357fe5b60018111156109be57fe5b8152602001908152602001600020543373ffffffffffffffffffffffffffffffffffffffff167fdb1f81b27a0cfe04c709176ef27f5b6ba5e3f9630c8138609a56ac7fdcac8cc760405160405180910390a350565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000836001811115610a6257fe5b6001811115610a6d57fe5b8152602001908152602001600020549050919050565b60011515600260019054906101000a900460ff16151514610aa357600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b66576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f6f6e6c79206f7261636c6500000000000000000000000000000000000000000081525060200191505060405180910390fd5b81600160000160006101000a81548160ff02191690836001811115610b8757fe5b021790555080600160000160016101000a81548160ff02191690836001811115610bad57fe5b02179055506001600260006101000a81548160ff0219169083151502179055505050565b610bd96110dd565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c99576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915090505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6005602052816000526040600020602052806000526040600020600091509150505481565b60006001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f990c442e6adb818b8fa7db3cf1023decd07f7b66e5306928c7ed527d974192bb60405160405180910390a2600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905090565b610eda6110dd565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f9a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611020576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806110e66026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60003390509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a264697066735822122016ad70431b7f95d7af20153b7fb10235212efbfc2ae9a75c2f1c3d0d227efd8c64736f6c63430007030033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "54:2182:3:-:0;;;241:4;225:20;;;;;;;;;;;;;;;;;;;;576:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:17:2;897:12;:10;;;:12;;:::i;:::-;877:32;;929:9;920:6;;:18;;;;;;;;;;;;;;;;;;987:9;954:43;;983:1;954:43;;;;;;;;;;;;851:154;621:7:3;612:6;;:16;;;;;;;;;;;;;;;;;;644:10;636:5;;:18;;;;;;;;;;;;;;;;;;576:86;54:2182;;605:106:0;658:15;693:10;686:17;;605:106;:::o;54:2182:3:-;;;;;;;",
  "deployedSourceMap": "54:2182:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;250:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1355:465;;;;;;;;;;;;;:::i;:::-;;666:120;;;;;;;;;;;;;:::i;:::-;;790:279;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1238:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1826:214;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1728:148:2;;;;;;;;;;;;;:::i;:::-;;402:21:3;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;296:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1086:79:2;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;334:63:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1073:161;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2031:244:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;250:41:3;;;;;;;;;;;;;;;;;;;;;;:::o;1355:465::-;2216:4;2204:16;;:8;;;;;;;;;;;:16;;;2196:25;;;;;;1412:15:::1;1430:14;:26;1445:10;1430:26;;;;;;;;;;;;;;;:41;1457:6;:13;;;;;;;;;;;;1430:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;1412:59;;1499:1;1486:10;:14;1478:58;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;1567:4;1553:18;;:10;;;;;;;;;;;:18;;;1545:52;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;1604:9;1663:4;:19;1668:6;:13;;;;;;;;;;;;1663:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;1650:10;1629:4;:18;1634:6;:12;;;;;;;;;;;;1629:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;:31;:53;;;;;;1616:10;:66;1604:78;;1731:1;1689:14;:26;1704:10;1689:26;;;;;;;;;;;;;;;:39;1716:11:::0;1689:39:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;:43;;;;1781:1;1739:14;:26;1754:10;1739:26;;;;;;;;;;;;;;;:39;1766:11;1739:39:::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;:43;;;;1789:10;:19;;:25;1809:4;1789:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2227:1;;1355:465::o:0;666:120::-;2216:4;2204:16;;:8;;;;;;;;;;;:16;;;2196:25;;;;;;742:10:::1;733:19;;:5;;;;;;;;;;;:19;;;725:28;;;::::0;::::1;;772:8;;;;;;;;;;;771:9;760:8;;:20;;;;;;;;;;;;;;;;;;666:120::o:0;790:279::-;2216:4;2204:16;;:8;;;;;;;;;;;:16;;;2196:25;;;;;;883:5:::1;869:19;;:10;;;;;;;;;;;:19;;;861:48;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;931:9;916:4;:11;921:5;916:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;984:9;947:14;:26;962:10;947:26;;;;;;;;;;;;;;;:33;974:5;947:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;:46;;;;;;;;;;;1029:14;:26;1044:10;1029:26;;;;;;;;;;;;;;;:33;1056:5;1029:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;1017:10;1005:58;;;;;;;;;;;;790:279:::0;:::o;1238:113::-;1289:4;1311:14;:26;1326:10;1311:26;;;;;;;;;;;;;;;:33;1338:5;1311:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;1304:40;;1238:113;;;:::o;1826:214::-;2216:4;2204:16;;:8;;;;;;;;;;;:16;;;2196:25;;;;;;1926:10:::1;1916:20;;:6;;;;;;;;;;;:20;;;1908:44;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;1975:7;1959:6;:13;;;:23;;;;;;;;;;;;;;;;;;;;;;;;2004:6;1989;:12;;;:21;;;;;;;;;;;;;;;;;;;;;;;;2030:4;2017:10;;:17;;;;;;;;;;;;;;;;;;1826:214:::0;;:::o;1728:148:2:-;1308:12;:10;:12::i;:::-;1298:22;;:6;;;;;;;;;;:22;;;1290:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1835:1:::1;1798:40;;1819:6;::::0;::::1;;;;;;;;1798:40;;;;;;;;;;;;1866:1;1849:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1728:148::o:0;402:21:3:-;;;;;;;;;;;;;:::o;296:33::-;;;;;;;;;;;;;;;;;:::o;1086:79:2:-;1124:7;1151:6;;;;;;;;;;;1144:13;;1086:79;:::o;334:63:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1073:161::-;1107:4;1146;1123:8;:20;1132:10;1123:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;1178:10;1166:23;;;;;;;;;;;;1207:8;:20;1216:10;1207:20;;;;;;;;;;;;;;;;;;;;;;;;;1200:27;;1073:161;:::o;2031:244:2:-;1308:12;:10;:12::i;:::-;1298:22;;:6;;;;;;;;;;:22;;;1290:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2140:1:::1;2120:22;;:8;:22;;;;2112:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2230:8;2201:38;;2222:6;::::0;::::1;;;;;;;;2201:38;;;;;;;;;;;;2259:8;2250:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2031:244:::0;:::o;605:106:0:-;658:15;693:10;686:17;;605:106;:::o",
  "source": "import \"./Ownable.sol\";\r\n\r\npragma solidity ^0.7.3;\r\n\r\ncontract PredictionMarket is Ownable {\r\n  enum Side { Suning, Damwon }\r\n  struct Result {\r\n    Side winner;\r\n    Side loser;\r\n  }\r\n  Result result;\r\n  bool gameisDone;\r\n  bool isActive = true;\r\n  mapping (address => bool) public enrolled;\r\n  mapping(Side => uint) public bets;\r\n  mapping(address => mapping(Side => uint)) public betsPerGambler;\r\n  address public oracle;\r\n  address admin;\r\n  event LogEnrolled(address indexed accountAdress);\r\n  event LogPlaceBet(address indexed accountAddress, uint indexed amount);\r\n\r\n  constructor(address _oracle) {\r\n    oracle = _oracle; \r\n    admin = msg.sender;\r\n    }\r\n  function CircuitBreaker() external activeContract() {\r\n    require(admin == msg.sender);\r\n    isActive = !isActive;\r\n  }\r\n  function placeBet(Side _side) external payable activeContract() {\r\n    require(gameisDone == false, 'game is finished');\r\n    bets[_side] += msg.value;\r\n    betsPerGambler[msg.sender][_side] += msg.value;\r\n    emit LogPlaceBet(msg.sender, betsPerGambler[msg.sender][_side]);\r\n  }\r\n  function enroll() public returns (bool){\r\n        enrolled[msg.sender] = true;\r\n        emit LogEnrolled(msg.sender);\r\n        return enrolled[msg.sender]; \r\n  }\r\n  function amountBet(Side _side) public view returns(uint)\r\n  {\r\n   return betsPerGambler[msg.sender][_side]; \r\n  }\r\n  function withdrawGain() external activeContract() {\r\n    uint gamblerBet = betsPerGambler[msg.sender][result.winner];\r\n    require(gamblerBet > 0, 'you do not have any winning bet');  \r\n    require(gameisDone == true, 'game not finished yet');\r\n    uint gain = gamblerBet + bets[result.loser] * gamblerBet / bets[result.winner];\r\n    betsPerGambler[msg.sender][Side.Suning] = 0;\r\n    betsPerGambler[msg.sender][Side.Damwon] = 0;\r\n    msg.sender.transfer(gain);\r\n  }\r\n\r\n  function reportResult(Side _winner, Side _loser) external activeContract() {\r\n    require(oracle == msg.sender, 'only oracle');\r\n    result.winner = _winner;\r\n    result.loser = _loser;\r\n    gameisDone = true;\r\n  }\r\n  function kill() private\r\n    {\r\n           if(msg.sender == owner()) selfdestruct(address(uint160(owner()))); \r\n    }\r\n modifier activeContract() {\r\n   require(isActive == true);\r\n   _;\r\n }\r\n}\r\n",
  "sourcePath": "D:/ConsensysAcademy/prediction market/contracts/PredictionMarket.sol",
  "ast": {
    "absolutePath": "/D/ConsensysAcademy/prediction market/contracts/PredictionMarket.sol",
    "exportedSymbols": {
      "Context": [
        22
      ],
      "Ownable": [
        164
      ],
      "PredictionMarket": [
        466
      ]
    },
    "id": 467,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "absolutePath": "/D/ConsensysAcademy/prediction market/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 166,
        "nodeType": "ImportDirective",
        "scope": 467,
        "sourceUnit": 165,
        "src": "0:23:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 167,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "27:23:3"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 168,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 164,
              "src": "83:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$164",
                "typeString": "contract Ownable"
              }
            },
            "id": 169,
            "nodeType": "InheritanceSpecifier",
            "src": "83:7:3"
          }
        ],
        "contractDependencies": [
          22,
          164
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 466,
        "linearizedBaseContracts": [
          466,
          164,
          22
        ],
        "name": "PredictionMarket",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "PredictionMarket.Side",
            "id": 172,
            "members": [
              {
                "id": 170,
                "name": "Suning",
                "nodeType": "EnumValue",
                "src": "108:6:3"
              },
              {
                "id": 171,
                "name": "Damwon",
                "nodeType": "EnumValue",
                "src": "116:6:3"
              }
            ],
            "name": "Side",
            "nodeType": "EnumDefinition",
            "src": "96:28:3"
          },
          {
            "canonicalName": "PredictionMarket.Result",
            "id": 177,
            "members": [
              {
                "constant": false,
                "id": 174,
                "mutability": "mutable",
                "name": "winner",
                "nodeType": "VariableDeclaration",
                "scope": 177,
                "src": "149:11:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Side_$172",
                  "typeString": "enum PredictionMarket.Side"
                },
                "typeName": {
                  "id": 173,
                  "name": "Side",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 172,
                  "src": "149:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$172",
                    "typeString": "enum PredictionMarket.Side"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 176,
                "mutability": "mutable",
                "name": "loser",
                "nodeType": "VariableDeclaration",
                "scope": 177,
                "src": "167:10:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Side_$172",
                  "typeString": "enum PredictionMarket.Side"
                },
                "typeName": {
                  "id": 175,
                  "name": "Side",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 172,
                  "src": "167:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$172",
                    "typeString": "enum PredictionMarket.Side"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Result",
            "nodeType": "StructDefinition",
            "scope": 466,
            "src": "128:55:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 179,
            "mutability": "mutable",
            "name": "result",
            "nodeType": "VariableDeclaration",
            "scope": 466,
            "src": "187:13:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Result_$177_storage",
              "typeString": "struct PredictionMarket.Result"
            },
            "typeName": {
              "id": 178,
              "name": "Result",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 177,
              "src": "187:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Result_$177_storage_ptr",
                "typeString": "struct PredictionMarket.Result"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 181,
            "mutability": "mutable",
            "name": "gameisDone",
            "nodeType": "VariableDeclaration",
            "scope": 466,
            "src": "205:15:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 180,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "205:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 184,
            "mutability": "mutable",
            "name": "isActive",
            "nodeType": "VariableDeclaration",
            "scope": 466,
            "src": "225:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 182,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "225:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "74727565",
              "id": 183,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "241:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "10eb0e0e",
            "id": 188,
            "mutability": "mutable",
            "name": "enrolled",
            "nodeType": "VariableDeclaration",
            "scope": 466,
            "src": "250:41:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 187,
              "keyType": {
                "id": 185,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "259:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "250:25:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 186,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "270:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7e0ecc00",
            "id": 192,
            "mutability": "mutable",
            "name": "bets",
            "nodeType": "VariableDeclaration",
            "scope": 466,
            "src": "296:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_enum$_Side_$172_$_t_uint256_$",
              "typeString": "mapping(enum PredictionMarket.Side => uint256)"
            },
            "typeName": {
              "id": 191,
              "keyType": {
                "id": 189,
                "name": "Side",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 172,
                "src": "304:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Side_$172",
                  "typeString": "enum PredictionMarket.Side"
                }
              },
              "nodeType": "Mapping",
              "src": "296:21:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_enum$_Side_$172_$_t_uint256_$",
                "typeString": "mapping(enum PredictionMarket.Side => uint256)"
              },
              "valueType": {
                "id": 190,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "312:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9d5a3739",
            "id": 198,
            "mutability": "mutable",
            "name": "betsPerGambler",
            "nodeType": "VariableDeclaration",
            "scope": 466,
            "src": "334:63:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$172_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
            },
            "typeName": {
              "id": 197,
              "keyType": {
                "id": 193,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "342:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "334:41:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$172_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
              },
              "valueType": {
                "id": 196,
                "keyType": {
                  "id": 194,
                  "name": "Side",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 172,
                  "src": "361:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$172",
                    "typeString": "enum PredictionMarket.Side"
                  }
                },
                "nodeType": "Mapping",
                "src": "353:21:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_enum$_Side_$172_$_t_uint256_$",
                  "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                },
                "valueType": {
                  "id": 195,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "369:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7dc0d1d0",
            "id": 200,
            "mutability": "mutable",
            "name": "oracle",
            "nodeType": "VariableDeclaration",
            "scope": 466,
            "src": "402:21:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 199,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "402:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 202,
            "mutability": "mutable",
            "name": "admin",
            "nodeType": "VariableDeclaration",
            "scope": 466,
            "src": "428:13:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 201,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "428:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 206,
            "name": "LogEnrolled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 204,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "accountAdress",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "464:29:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 203,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "464:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "463:31:3"
            },
            "src": "446:49:3"
          },
          {
            "anonymous": false,
            "id": 212,
            "name": "LogPlaceBet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 208,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "517:30:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "517:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 210,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "549:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "549:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "516:53:3"
            },
            "src": "499:71:3"
          },
          {
            "body": {
              "id": 226,
              "nodeType": "Block",
              "src": "605:57:3",
              "statements": [
                {
                  "expression": {
                    "id": 219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 217,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 200,
                      "src": "612:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 218,
                      "name": "_oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 214,
                      "src": "621:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "612:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 220,
                  "nodeType": "ExpressionStatement",
                  "src": "612:16:3"
                },
                {
                  "expression": {
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 221,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "636:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 222,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "644:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "644:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "636:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "636:18:3"
                }
              ]
            },
            "id": 227,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "588:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "588:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "587:17:3"
            },
            "returnParameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "605:0:3"
            },
            "scope": 466,
            "src": "576:86:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 244,
              "nodeType": "Block",
              "src": "718:68:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 233,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 202,
                          "src": "733:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 234,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "742:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "742:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "733:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 232,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "725:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "725:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "725:28:3"
                },
                {
                  "expression": {
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 239,
                      "name": "isActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 184,
                      "src": "760:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "771:9:3",
                      "subExpression": {
                        "id": 240,
                        "name": "isActive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 184,
                        "src": "772:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "760:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "760:20:3"
                }
              ]
            },
            "functionSelector": "33d35105",
            "id": 245,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 230,
                "modifierName": {
                  "id": 229,
                  "name": "activeContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 465,
                  "src": "701:14:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "701:16:3"
              }
            ],
            "name": "CircuitBreaker",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "689:2:3"
            },
            "returnParameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "718:0:3"
            },
            "scope": 466,
            "src": "666:120:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 287,
              "nodeType": "Block",
              "src": "854:215:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 253,
                          "name": "gameisDone",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 181,
                          "src": "869:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "883:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "869:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "67616d652069732066696e6973686564",
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "890:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da1ba1cb91b473e9694002570d3185df78132b1312e8fd984443aa541e09d7bf",
                          "typeString": "literal_string \"game is finished\""
                        },
                        "value": "game is finished"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da1ba1cb91b473e9694002570d3185df78132b1312e8fd984443aa541e09d7bf",
                          "typeString": "literal_string \"game is finished\""
                        }
                      ],
                      "id": 252,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "861:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "861:48:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "861:48:3"
                },
                {
                  "expression": {
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 259,
                        "name": "bets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 192,
                        "src": "916:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$172_$_t_uint256_$",
                          "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                        }
                      },
                      "id": 261,
                      "indexExpression": {
                        "id": 260,
                        "name": "_side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 247,
                        "src": "921:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$172",
                          "typeString": "enum PredictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "916:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 262,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "931:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "931:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "916:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "916:24:3"
                },
                {
                  "expression": {
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 266,
                          "name": "betsPerGambler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "947:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$172_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                          }
                        },
                        "id": 270,
                        "indexExpression": {
                          "expression": {
                            "id": 267,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "962:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "962:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "947:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$172_$_t_uint256_$",
                          "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                        }
                      },
                      "id": 271,
                      "indexExpression": {
                        "id": 269,
                        "name": "_side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 247,
                        "src": "974:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$172",
                          "typeString": "enum PredictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "947:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 272,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "984:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "984:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "947:46:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 275,
                  "nodeType": "ExpressionStatement",
                  "src": "947:46:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 277,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1017:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1017:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 279,
                            "name": "betsPerGambler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "1029:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$172_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                            }
                          },
                          "id": 282,
                          "indexExpression": {
                            "expression": {
                              "id": 280,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1044:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1044:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1029:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Side_$172_$_t_uint256_$",
                            "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                          }
                        },
                        "id": 284,
                        "indexExpression": {
                          "id": 283,
                          "name": "_side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 247,
                          "src": "1056:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Side_$172",
                            "typeString": "enum PredictionMarket.Side"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1029:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 276,
                      "name": "LogPlaceBet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 212,
                      "src": "1005:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1005:58:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 286,
                  "nodeType": "EmitStatement",
                  "src": "1000:63:3"
                }
              ]
            },
            "functionSelector": "43046844",
            "id": 288,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 250,
                "modifierName": {
                  "id": 249,
                  "name": "activeContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 465,
                  "src": "837:14:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "837:16:3"
              }
            ],
            "name": "placeBet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 247,
                  "mutability": "mutable",
                  "name": "_side",
                  "nodeType": "VariableDeclaration",
                  "scope": 288,
                  "src": "808:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$172",
                    "typeString": "enum PredictionMarket.Side"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "Side",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 172,
                    "src": "808:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$172",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "807:12:3"
            },
            "returnParameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "854:0:3"
            },
            "scope": 466,
            "src": "790:279:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 310,
              "nodeType": "Block",
              "src": "1112:122:3",
              "statements": [
                {
                  "expression": {
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 293,
                        "name": "enrolled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 188,
                        "src": "1123:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 296,
                      "indexExpression": {
                        "expression": {
                          "id": 294,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1132:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1132:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1123:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1146:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1123:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "1123:27:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 301,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1178:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1178:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 300,
                      "name": "LogEnrolled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 206,
                      "src": "1166:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1166:23:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 304,
                  "nodeType": "EmitStatement",
                  "src": "1161:28:3"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 305,
                      "name": "enrolled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 188,
                      "src": "1207:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 308,
                    "indexExpression": {
                      "expression": {
                        "id": 306,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1216:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1216:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1207:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 292,
                  "id": 309,
                  "nodeType": "Return",
                  "src": "1200:27:3"
                }
              ]
            },
            "functionSelector": "e65f2a7e",
            "id": 311,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enroll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1088:2:3"
            },
            "returnParameters": {
              "id": 292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 291,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 311,
                  "src": "1107:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 290,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1107:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1106:6:3"
            },
            "scope": 466,
            "src": "1073:161:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 325,
              "nodeType": "Block",
              "src": "1298:53:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 318,
                        "name": "betsPerGambler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "1311:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$172_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                        }
                      },
                      "id": 321,
                      "indexExpression": {
                        "expression": {
                          "id": 319,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1326:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1326:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1311:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_enum$_Side_$172_$_t_uint256_$",
                        "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                      }
                    },
                    "id": 323,
                    "indexExpression": {
                      "id": 322,
                      "name": "_side",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 313,
                      "src": "1338:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$172",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1311:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 317,
                  "id": 324,
                  "nodeType": "Return",
                  "src": "1304:40:3"
                }
              ]
            },
            "functionSelector": "461371db",
            "id": 326,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "amountBet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 313,
                  "mutability": "mutable",
                  "name": "_side",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "1257:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$172",
                    "typeString": "enum PredictionMarket.Side"
                  },
                  "typeName": {
                    "id": 312,
                    "name": "Side",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 172,
                    "src": "1257:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$172",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1256:12:3"
            },
            "returnParameters": {
              "id": 317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 316,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "1289:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 315,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1289:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1288:6:3"
            },
            "scope": 466,
            "src": "1238:113:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 399,
              "nodeType": "Block",
              "src": "1405:415:3",
              "statements": [
                {
                  "assignments": [
                    332
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 332,
                      "mutability": "mutable",
                      "name": "gamblerBet",
                      "nodeType": "VariableDeclaration",
                      "scope": 399,
                      "src": "1412:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 331,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1412:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 340,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 333,
                        "name": "betsPerGambler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "1430:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$172_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                        }
                      },
                      "id": 336,
                      "indexExpression": {
                        "expression": {
                          "id": 334,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1445:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1445:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1430:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_enum$_Side_$172_$_t_uint256_$",
                        "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                      }
                    },
                    "id": 339,
                    "indexExpression": {
                      "expression": {
                        "id": 337,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 179,
                        "src": "1457:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$177_storage",
                          "typeString": "struct PredictionMarket.Result storage ref"
                        }
                      },
                      "id": 338,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "winner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 174,
                      "src": "1457:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$172",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1430:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1412:59:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 342,
                          "name": "gamblerBet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 332,
                          "src": "1486:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1499:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1486:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f7520646f206e6f74206861766520616e792077696e6e696e6720626574",
                        "id": 345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1502:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_580c326cdba3173fc617bf584c3e1a4fdc48208658005920e02bf236cdbddda5",
                          "typeString": "literal_string \"you do not have any winning bet\""
                        },
                        "value": "you do not have any winning bet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_580c326cdba3173fc617bf584c3e1a4fdc48208658005920e02bf236cdbddda5",
                          "typeString": "literal_string \"you do not have any winning bet\""
                        }
                      ],
                      "id": 341,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1478:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1478:58:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 347,
                  "nodeType": "ExpressionStatement",
                  "src": "1478:58:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 349,
                          "name": "gameisDone",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 181,
                          "src": "1553:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1567:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1553:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "67616d65206e6f742066696e697368656420796574",
                        "id": 352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1573:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3a0ac76f5b07c2ce9fe93db648e88c0f7b84f18bbd8d640ef0076345b127bd3",
                          "typeString": "literal_string \"game not finished yet\""
                        },
                        "value": "game not finished yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3a0ac76f5b07c2ce9fe93db648e88c0f7b84f18bbd8d640ef0076345b127bd3",
                          "typeString": "literal_string \"game not finished yet\""
                        }
                      ],
                      "id": 348,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1545:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1545:52:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 354,
                  "nodeType": "ExpressionStatement",
                  "src": "1545:52:3"
                },
                {
                  "assignments": [
                    356
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 356,
                      "mutability": "mutable",
                      "name": "gain",
                      "nodeType": "VariableDeclaration",
                      "scope": 399,
                      "src": "1604:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 355,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1604:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 370,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 357,
                      "name": "gamblerBet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 332,
                      "src": "1616:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 358,
                            "name": "bets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 192,
                            "src": "1629:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_enum$_Side_$172_$_t_uint256_$",
                              "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                            }
                          },
                          "id": 361,
                          "indexExpression": {
                            "expression": {
                              "id": 359,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 179,
                              "src": "1634:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Result_$177_storage",
                                "typeString": "struct PredictionMarket.Result storage ref"
                              }
                            },
                            "id": 360,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "loser",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 176,
                            "src": "1634:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Side_$172",
                              "typeString": "enum PredictionMarket.Side"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1629:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 362,
                          "name": "gamblerBet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 332,
                          "src": "1650:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1629:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "baseExpression": {
                          "id": 364,
                          "name": "bets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 192,
                          "src": "1663:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Side_$172_$_t_uint256_$",
                            "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                          }
                        },
                        "id": 367,
                        "indexExpression": {
                          "expression": {
                            "id": 365,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 179,
                            "src": "1668:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Result_$177_storage",
                              "typeString": "struct PredictionMarket.Result storage ref"
                            }
                          },
                          "id": 366,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "winner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 174,
                          "src": "1668:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Side_$172",
                            "typeString": "enum PredictionMarket.Side"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1663:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1629:53:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1616:66:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1604:78:3"
                },
                {
                  "expression": {
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 371,
                          "name": "betsPerGambler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "1689:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$172_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                          }
                        },
                        "id": 376,
                        "indexExpression": {
                          "expression": {
                            "id": 372,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1704:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1704:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1689:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$172_$_t_uint256_$",
                          "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                        }
                      },
                      "id": 377,
                      "indexExpression": {
                        "expression": {
                          "id": 374,
                          "name": "Side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 172,
                          "src": "1716:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Side_$172_$",
                            "typeString": "type(enum PredictionMarket.Side)"
                          }
                        },
                        "id": 375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Suning",
                        "nodeType": "MemberAccess",
                        "src": "1716:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$172",
                          "typeString": "enum PredictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1689:39:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1731:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1689:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 380,
                  "nodeType": "ExpressionStatement",
                  "src": "1689:43:3"
                },
                {
                  "expression": {
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 381,
                          "name": "betsPerGambler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "1739:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$172_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                          }
                        },
                        "id": 386,
                        "indexExpression": {
                          "expression": {
                            "id": 382,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1754:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1754:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1739:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$172_$_t_uint256_$",
                          "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                        }
                      },
                      "id": 387,
                      "indexExpression": {
                        "expression": {
                          "id": 384,
                          "name": "Side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 172,
                          "src": "1766:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Side_$172_$",
                            "typeString": "type(enum PredictionMarket.Side)"
                          }
                        },
                        "id": 385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Damwon",
                        "nodeType": "MemberAccess",
                        "src": "1766:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$172",
                          "typeString": "enum PredictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1739:39:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1781:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1739:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 390,
                  "nodeType": "ExpressionStatement",
                  "src": "1739:43:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 396,
                        "name": "gain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "1809:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 391,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1789:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1789:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1789:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1789:25:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "1789:25:3"
                }
              ]
            },
            "functionSelector": "2b539c86",
            "id": 400,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 329,
                "modifierName": {
                  "id": 328,
                  "name": "activeContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 465,
                  "src": "1388:14:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1388:16:3"
              }
            ],
            "name": "withdrawGain",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1376:2:3"
            },
            "returnParameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1405:0:3"
            },
            "scope": 466,
            "src": "1355:465:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 433,
              "nodeType": "Block",
              "src": "1901:139:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 410,
                          "name": "oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 200,
                          "src": "1916:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 411,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1926:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1926:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1916:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79206f7261636c65",
                        "id": 414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1938:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc6b85902536b0f8487034b3ecf1e60a795dc2f76885f36df68d2eea7b0bd42d",
                          "typeString": "literal_string \"only oracle\""
                        },
                        "value": "only oracle"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dc6b85902536b0f8487034b3ecf1e60a795dc2f76885f36df68d2eea7b0bd42d",
                          "typeString": "literal_string \"only oracle\""
                        }
                      ],
                      "id": 409,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1908:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1908:44:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 416,
                  "nodeType": "ExpressionStatement",
                  "src": "1908:44:3"
                },
                {
                  "expression": {
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 417,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 179,
                        "src": "1959:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$177_storage",
                          "typeString": "struct PredictionMarket.Result storage ref"
                        }
                      },
                      "id": 419,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "winner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 174,
                      "src": "1959:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$172",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 420,
                      "name": "_winner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 402,
                      "src": "1975:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$172",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "src": "1959:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$172",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "id": 422,
                  "nodeType": "ExpressionStatement",
                  "src": "1959:23:3"
                },
                {
                  "expression": {
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 423,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 179,
                        "src": "1989:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$177_storage",
                          "typeString": "struct PredictionMarket.Result storage ref"
                        }
                      },
                      "id": 425,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "loser",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 176,
                      "src": "1989:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$172",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 426,
                      "name": "_loser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 404,
                      "src": "2004:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$172",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "src": "1989:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$172",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "id": 428,
                  "nodeType": "ExpressionStatement",
                  "src": "1989:21:3"
                },
                {
                  "expression": {
                    "id": 431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 429,
                      "name": "gameisDone",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 181,
                      "src": "2017:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2030:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2017:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 432,
                  "nodeType": "ExpressionStatement",
                  "src": "2017:17:3"
                }
              ]
            },
            "functionSelector": "4ec942b7",
            "id": 434,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 407,
                "modifierName": {
                  "id": 406,
                  "name": "activeContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 465,
                  "src": "1884:14:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1884:16:3"
              }
            ],
            "name": "reportResult",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "mutability": "mutable",
                  "name": "_winner",
                  "nodeType": "VariableDeclaration",
                  "scope": 434,
                  "src": "1848:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$172",
                    "typeString": "enum PredictionMarket.Side"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "Side",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 172,
                    "src": "1848:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$172",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 404,
                  "mutability": "mutable",
                  "name": "_loser",
                  "nodeType": "VariableDeclaration",
                  "scope": 434,
                  "src": "1862:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$172",
                    "typeString": "enum PredictionMarket.Side"
                  },
                  "typeName": {
                    "id": 403,
                    "name": "Side",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 172,
                    "src": "1862:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$172",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1847:27:3"
            },
            "returnParameters": {
              "id": 408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1901:0:3"
            },
            "scope": 466,
            "src": "1826:214:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 454,
              "nodeType": "Block",
              "src": "2073:88:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 437,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2090:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2090:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 439,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "2104:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2104:7:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2090:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 453,
                  "nodeType": "IfStatement",
                  "src": "2087:65:3",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 447,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 100,
                                    "src": "2142:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 448,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2142:7:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 446,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2134:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint160_$",
                                  "typeString": "type(uint160)"
                                },
                                "typeName": {
                                  "id": 445,
                                  "name": "uint160",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2134:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 449,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2134:16:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            ],
                            "id": 444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2126:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 443,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2126:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2126:25:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 442,
                        "name": "selfdestruct",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -21,
                        "src": "2113:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                          "typeString": "function (address payable)"
                        }
                      },
                      "id": 451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2113:39:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 452,
                    "nodeType": "ExpressionStatement",
                    "src": "2113:39:3"
                  }
                }
              ]
            },
            "id": 455,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "kill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2057:2:3"
            },
            "returnParameters": {
              "id": 436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2073:0:3"
            },
            "scope": 466,
            "src": "2044:117:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 464,
              "nodeType": "Block",
              "src": "2190:43:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 458,
                          "name": "isActive",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 184,
                          "src": "2204:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2216:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2204:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 457,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2196:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2196:25:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 462,
                  "nodeType": "ExpressionStatement",
                  "src": "2196:25:3"
                },
                {
                  "id": 463,
                  "nodeType": "PlaceholderStatement",
                  "src": "2227:1:3"
                }
              ]
            },
            "id": 465,
            "name": "activeContract",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2187:2:3"
            },
            "src": "2164:69:3",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 467,
        "src": "54:2182:3"
      }
    ],
    "src": "0:2238:3"
  },
  "legacyAST": {
    "absolutePath": "/D/ConsensysAcademy/prediction market/contracts/PredictionMarket.sol",
    "exportedSymbols": {
      "Context": [
        22
      ],
      "Ownable": [
        164
      ],
      "PredictionMarket": [
        466
      ]
    },
    "id": 467,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "absolutePath": "/D/ConsensysAcademy/prediction market/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 166,
        "nodeType": "ImportDirective",
        "scope": 467,
        "sourceUnit": 165,
        "src": "0:23:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 167,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "27:23:3"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 168,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 164,
              "src": "83:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$164",
                "typeString": "contract Ownable"
              }
            },
            "id": 169,
            "nodeType": "InheritanceSpecifier",
            "src": "83:7:3"
          }
        ],
        "contractDependencies": [
          22,
          164
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 466,
        "linearizedBaseContracts": [
          466,
          164,
          22
        ],
        "name": "PredictionMarket",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "PredictionMarket.Side",
            "id": 172,
            "members": [
              {
                "id": 170,
                "name": "Suning",
                "nodeType": "EnumValue",
                "src": "108:6:3"
              },
              {
                "id": 171,
                "name": "Damwon",
                "nodeType": "EnumValue",
                "src": "116:6:3"
              }
            ],
            "name": "Side",
            "nodeType": "EnumDefinition",
            "src": "96:28:3"
          },
          {
            "canonicalName": "PredictionMarket.Result",
            "id": 177,
            "members": [
              {
                "constant": false,
                "id": 174,
                "mutability": "mutable",
                "name": "winner",
                "nodeType": "VariableDeclaration",
                "scope": 177,
                "src": "149:11:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Side_$172",
                  "typeString": "enum PredictionMarket.Side"
                },
                "typeName": {
                  "id": 173,
                  "name": "Side",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 172,
                  "src": "149:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$172",
                    "typeString": "enum PredictionMarket.Side"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 176,
                "mutability": "mutable",
                "name": "loser",
                "nodeType": "VariableDeclaration",
                "scope": 177,
                "src": "167:10:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Side_$172",
                  "typeString": "enum PredictionMarket.Side"
                },
                "typeName": {
                  "id": 175,
                  "name": "Side",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 172,
                  "src": "167:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$172",
                    "typeString": "enum PredictionMarket.Side"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Result",
            "nodeType": "StructDefinition",
            "scope": 466,
            "src": "128:55:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 179,
            "mutability": "mutable",
            "name": "result",
            "nodeType": "VariableDeclaration",
            "scope": 466,
            "src": "187:13:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Result_$177_storage",
              "typeString": "struct PredictionMarket.Result"
            },
            "typeName": {
              "id": 178,
              "name": "Result",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 177,
              "src": "187:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Result_$177_storage_ptr",
                "typeString": "struct PredictionMarket.Result"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 181,
            "mutability": "mutable",
            "name": "gameisDone",
            "nodeType": "VariableDeclaration",
            "scope": 466,
            "src": "205:15:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 180,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "205:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 184,
            "mutability": "mutable",
            "name": "isActive",
            "nodeType": "VariableDeclaration",
            "scope": 466,
            "src": "225:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 182,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "225:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "74727565",
              "id": 183,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "241:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "10eb0e0e",
            "id": 188,
            "mutability": "mutable",
            "name": "enrolled",
            "nodeType": "VariableDeclaration",
            "scope": 466,
            "src": "250:41:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 187,
              "keyType": {
                "id": 185,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "259:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "250:25:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 186,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "270:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7e0ecc00",
            "id": 192,
            "mutability": "mutable",
            "name": "bets",
            "nodeType": "VariableDeclaration",
            "scope": 466,
            "src": "296:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_enum$_Side_$172_$_t_uint256_$",
              "typeString": "mapping(enum PredictionMarket.Side => uint256)"
            },
            "typeName": {
              "id": 191,
              "keyType": {
                "id": 189,
                "name": "Side",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 172,
                "src": "304:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Side_$172",
                  "typeString": "enum PredictionMarket.Side"
                }
              },
              "nodeType": "Mapping",
              "src": "296:21:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_enum$_Side_$172_$_t_uint256_$",
                "typeString": "mapping(enum PredictionMarket.Side => uint256)"
              },
              "valueType": {
                "id": 190,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "312:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9d5a3739",
            "id": 198,
            "mutability": "mutable",
            "name": "betsPerGambler",
            "nodeType": "VariableDeclaration",
            "scope": 466,
            "src": "334:63:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$172_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
            },
            "typeName": {
              "id": 197,
              "keyType": {
                "id": 193,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "342:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "334:41:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$172_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
              },
              "valueType": {
                "id": 196,
                "keyType": {
                  "id": 194,
                  "name": "Side",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 172,
                  "src": "361:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$172",
                    "typeString": "enum PredictionMarket.Side"
                  }
                },
                "nodeType": "Mapping",
                "src": "353:21:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_enum$_Side_$172_$_t_uint256_$",
                  "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                },
                "valueType": {
                  "id": 195,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "369:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7dc0d1d0",
            "id": 200,
            "mutability": "mutable",
            "name": "oracle",
            "nodeType": "VariableDeclaration",
            "scope": 466,
            "src": "402:21:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 199,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "402:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 202,
            "mutability": "mutable",
            "name": "admin",
            "nodeType": "VariableDeclaration",
            "scope": 466,
            "src": "428:13:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 201,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "428:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 206,
            "name": "LogEnrolled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 204,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "accountAdress",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "464:29:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 203,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "464:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "463:31:3"
            },
            "src": "446:49:3"
          },
          {
            "anonymous": false,
            "id": 212,
            "name": "LogPlaceBet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 208,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "517:30:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "517:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 210,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "549:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "549:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "516:53:3"
            },
            "src": "499:71:3"
          },
          {
            "body": {
              "id": 226,
              "nodeType": "Block",
              "src": "605:57:3",
              "statements": [
                {
                  "expression": {
                    "id": 219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 217,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 200,
                      "src": "612:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 218,
                      "name": "_oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 214,
                      "src": "621:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "612:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 220,
                  "nodeType": "ExpressionStatement",
                  "src": "612:16:3"
                },
                {
                  "expression": {
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 221,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "636:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 222,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "644:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "644:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "636:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "636:18:3"
                }
              ]
            },
            "id": 227,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "588:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "588:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "587:17:3"
            },
            "returnParameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "605:0:3"
            },
            "scope": 466,
            "src": "576:86:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 244,
              "nodeType": "Block",
              "src": "718:68:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 233,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 202,
                          "src": "733:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 234,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "742:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "742:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "733:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 232,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "725:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "725:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "725:28:3"
                },
                {
                  "expression": {
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 239,
                      "name": "isActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 184,
                      "src": "760:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "771:9:3",
                      "subExpression": {
                        "id": 240,
                        "name": "isActive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 184,
                        "src": "772:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "760:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "760:20:3"
                }
              ]
            },
            "functionSelector": "33d35105",
            "id": 245,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 230,
                "modifierName": {
                  "id": 229,
                  "name": "activeContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 465,
                  "src": "701:14:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "701:16:3"
              }
            ],
            "name": "CircuitBreaker",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "689:2:3"
            },
            "returnParameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "718:0:3"
            },
            "scope": 466,
            "src": "666:120:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 287,
              "nodeType": "Block",
              "src": "854:215:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 253,
                          "name": "gameisDone",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 181,
                          "src": "869:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "883:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "869:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "67616d652069732066696e6973686564",
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "890:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da1ba1cb91b473e9694002570d3185df78132b1312e8fd984443aa541e09d7bf",
                          "typeString": "literal_string \"game is finished\""
                        },
                        "value": "game is finished"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da1ba1cb91b473e9694002570d3185df78132b1312e8fd984443aa541e09d7bf",
                          "typeString": "literal_string \"game is finished\""
                        }
                      ],
                      "id": 252,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "861:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "861:48:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "861:48:3"
                },
                {
                  "expression": {
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 259,
                        "name": "bets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 192,
                        "src": "916:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$172_$_t_uint256_$",
                          "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                        }
                      },
                      "id": 261,
                      "indexExpression": {
                        "id": 260,
                        "name": "_side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 247,
                        "src": "921:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$172",
                          "typeString": "enum PredictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "916:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 262,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "931:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "931:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "916:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "916:24:3"
                },
                {
                  "expression": {
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 266,
                          "name": "betsPerGambler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "947:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$172_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                          }
                        },
                        "id": 270,
                        "indexExpression": {
                          "expression": {
                            "id": 267,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "962:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "962:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "947:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$172_$_t_uint256_$",
                          "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                        }
                      },
                      "id": 271,
                      "indexExpression": {
                        "id": 269,
                        "name": "_side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 247,
                        "src": "974:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$172",
                          "typeString": "enum PredictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "947:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 272,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "984:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "984:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "947:46:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 275,
                  "nodeType": "ExpressionStatement",
                  "src": "947:46:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 277,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1017:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1017:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 279,
                            "name": "betsPerGambler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "1029:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$172_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                            }
                          },
                          "id": 282,
                          "indexExpression": {
                            "expression": {
                              "id": 280,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1044:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1044:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1029:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Side_$172_$_t_uint256_$",
                            "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                          }
                        },
                        "id": 284,
                        "indexExpression": {
                          "id": 283,
                          "name": "_side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 247,
                          "src": "1056:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Side_$172",
                            "typeString": "enum PredictionMarket.Side"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1029:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 276,
                      "name": "LogPlaceBet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 212,
                      "src": "1005:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1005:58:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 286,
                  "nodeType": "EmitStatement",
                  "src": "1000:63:3"
                }
              ]
            },
            "functionSelector": "43046844",
            "id": 288,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 250,
                "modifierName": {
                  "id": 249,
                  "name": "activeContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 465,
                  "src": "837:14:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "837:16:3"
              }
            ],
            "name": "placeBet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 247,
                  "mutability": "mutable",
                  "name": "_side",
                  "nodeType": "VariableDeclaration",
                  "scope": 288,
                  "src": "808:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$172",
                    "typeString": "enum PredictionMarket.Side"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "Side",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 172,
                    "src": "808:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$172",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "807:12:3"
            },
            "returnParameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "854:0:3"
            },
            "scope": 466,
            "src": "790:279:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 310,
              "nodeType": "Block",
              "src": "1112:122:3",
              "statements": [
                {
                  "expression": {
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 293,
                        "name": "enrolled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 188,
                        "src": "1123:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 296,
                      "indexExpression": {
                        "expression": {
                          "id": 294,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1132:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1132:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1123:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1146:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1123:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "1123:27:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 301,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1178:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1178:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 300,
                      "name": "LogEnrolled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 206,
                      "src": "1166:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1166:23:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 304,
                  "nodeType": "EmitStatement",
                  "src": "1161:28:3"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 305,
                      "name": "enrolled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 188,
                      "src": "1207:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 308,
                    "indexExpression": {
                      "expression": {
                        "id": 306,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1216:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1216:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1207:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 292,
                  "id": 309,
                  "nodeType": "Return",
                  "src": "1200:27:3"
                }
              ]
            },
            "functionSelector": "e65f2a7e",
            "id": 311,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enroll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1088:2:3"
            },
            "returnParameters": {
              "id": 292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 291,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 311,
                  "src": "1107:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 290,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1107:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1106:6:3"
            },
            "scope": 466,
            "src": "1073:161:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 325,
              "nodeType": "Block",
              "src": "1298:53:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 318,
                        "name": "betsPerGambler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "1311:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$172_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                        }
                      },
                      "id": 321,
                      "indexExpression": {
                        "expression": {
                          "id": 319,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1326:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1326:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1311:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_enum$_Side_$172_$_t_uint256_$",
                        "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                      }
                    },
                    "id": 323,
                    "indexExpression": {
                      "id": 322,
                      "name": "_side",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 313,
                      "src": "1338:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$172",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1311:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 317,
                  "id": 324,
                  "nodeType": "Return",
                  "src": "1304:40:3"
                }
              ]
            },
            "functionSelector": "461371db",
            "id": 326,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "amountBet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 313,
                  "mutability": "mutable",
                  "name": "_side",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "1257:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$172",
                    "typeString": "enum PredictionMarket.Side"
                  },
                  "typeName": {
                    "id": 312,
                    "name": "Side",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 172,
                    "src": "1257:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$172",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1256:12:3"
            },
            "returnParameters": {
              "id": 317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 316,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "1289:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 315,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1289:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1288:6:3"
            },
            "scope": 466,
            "src": "1238:113:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 399,
              "nodeType": "Block",
              "src": "1405:415:3",
              "statements": [
                {
                  "assignments": [
                    332
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 332,
                      "mutability": "mutable",
                      "name": "gamblerBet",
                      "nodeType": "VariableDeclaration",
                      "scope": 399,
                      "src": "1412:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 331,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1412:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 340,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 333,
                        "name": "betsPerGambler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "1430:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$172_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                        }
                      },
                      "id": 336,
                      "indexExpression": {
                        "expression": {
                          "id": 334,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1445:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1445:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1430:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_enum$_Side_$172_$_t_uint256_$",
                        "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                      }
                    },
                    "id": 339,
                    "indexExpression": {
                      "expression": {
                        "id": 337,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 179,
                        "src": "1457:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$177_storage",
                          "typeString": "struct PredictionMarket.Result storage ref"
                        }
                      },
                      "id": 338,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "winner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 174,
                      "src": "1457:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$172",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1430:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1412:59:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 342,
                          "name": "gamblerBet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 332,
                          "src": "1486:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1499:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1486:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f7520646f206e6f74206861766520616e792077696e6e696e6720626574",
                        "id": 345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1502:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_580c326cdba3173fc617bf584c3e1a4fdc48208658005920e02bf236cdbddda5",
                          "typeString": "literal_string \"you do not have any winning bet\""
                        },
                        "value": "you do not have any winning bet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_580c326cdba3173fc617bf584c3e1a4fdc48208658005920e02bf236cdbddda5",
                          "typeString": "literal_string \"you do not have any winning bet\""
                        }
                      ],
                      "id": 341,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1478:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1478:58:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 347,
                  "nodeType": "ExpressionStatement",
                  "src": "1478:58:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 349,
                          "name": "gameisDone",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 181,
                          "src": "1553:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1567:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1553:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "67616d65206e6f742066696e697368656420796574",
                        "id": 352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1573:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3a0ac76f5b07c2ce9fe93db648e88c0f7b84f18bbd8d640ef0076345b127bd3",
                          "typeString": "literal_string \"game not finished yet\""
                        },
                        "value": "game not finished yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3a0ac76f5b07c2ce9fe93db648e88c0f7b84f18bbd8d640ef0076345b127bd3",
                          "typeString": "literal_string \"game not finished yet\""
                        }
                      ],
                      "id": 348,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1545:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1545:52:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 354,
                  "nodeType": "ExpressionStatement",
                  "src": "1545:52:3"
                },
                {
                  "assignments": [
                    356
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 356,
                      "mutability": "mutable",
                      "name": "gain",
                      "nodeType": "VariableDeclaration",
                      "scope": 399,
                      "src": "1604:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 355,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1604:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 370,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 357,
                      "name": "gamblerBet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 332,
                      "src": "1616:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 358,
                            "name": "bets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 192,
                            "src": "1629:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_enum$_Side_$172_$_t_uint256_$",
                              "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                            }
                          },
                          "id": 361,
                          "indexExpression": {
                            "expression": {
                              "id": 359,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 179,
                              "src": "1634:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Result_$177_storage",
                                "typeString": "struct PredictionMarket.Result storage ref"
                              }
                            },
                            "id": 360,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "loser",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 176,
                            "src": "1634:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Side_$172",
                              "typeString": "enum PredictionMarket.Side"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1629:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 362,
                          "name": "gamblerBet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 332,
                          "src": "1650:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1629:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "baseExpression": {
                          "id": 364,
                          "name": "bets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 192,
                          "src": "1663:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Side_$172_$_t_uint256_$",
                            "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                          }
                        },
                        "id": 367,
                        "indexExpression": {
                          "expression": {
                            "id": 365,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 179,
                            "src": "1668:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Result_$177_storage",
                              "typeString": "struct PredictionMarket.Result storage ref"
                            }
                          },
                          "id": 366,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "winner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 174,
                          "src": "1668:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Side_$172",
                            "typeString": "enum PredictionMarket.Side"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1663:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1629:53:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1616:66:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1604:78:3"
                },
                {
                  "expression": {
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 371,
                          "name": "betsPerGambler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "1689:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$172_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                          }
                        },
                        "id": 376,
                        "indexExpression": {
                          "expression": {
                            "id": 372,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1704:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1704:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1689:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$172_$_t_uint256_$",
                          "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                        }
                      },
                      "id": 377,
                      "indexExpression": {
                        "expression": {
                          "id": 374,
                          "name": "Side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 172,
                          "src": "1716:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Side_$172_$",
                            "typeString": "type(enum PredictionMarket.Side)"
                          }
                        },
                        "id": 375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Suning",
                        "nodeType": "MemberAccess",
                        "src": "1716:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$172",
                          "typeString": "enum PredictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1689:39:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1731:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1689:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 380,
                  "nodeType": "ExpressionStatement",
                  "src": "1689:43:3"
                },
                {
                  "expression": {
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 381,
                          "name": "betsPerGambler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "1739:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$172_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                          }
                        },
                        "id": 386,
                        "indexExpression": {
                          "expression": {
                            "id": 382,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1754:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1754:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1739:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$172_$_t_uint256_$",
                          "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                        }
                      },
                      "id": 387,
                      "indexExpression": {
                        "expression": {
                          "id": 384,
                          "name": "Side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 172,
                          "src": "1766:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Side_$172_$",
                            "typeString": "type(enum PredictionMarket.Side)"
                          }
                        },
                        "id": 385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Damwon",
                        "nodeType": "MemberAccess",
                        "src": "1766:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$172",
                          "typeString": "enum PredictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1739:39:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1781:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1739:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 390,
                  "nodeType": "ExpressionStatement",
                  "src": "1739:43:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 396,
                        "name": "gain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "1809:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 391,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1789:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1789:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1789:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1789:25:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "1789:25:3"
                }
              ]
            },
            "functionSelector": "2b539c86",
            "id": 400,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 329,
                "modifierName": {
                  "id": 328,
                  "name": "activeContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 465,
                  "src": "1388:14:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1388:16:3"
              }
            ],
            "name": "withdrawGain",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1376:2:3"
            },
            "returnParameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1405:0:3"
            },
            "scope": 466,
            "src": "1355:465:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 433,
              "nodeType": "Block",
              "src": "1901:139:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 410,
                          "name": "oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 200,
                          "src": "1916:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 411,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1926:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1926:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1916:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79206f7261636c65",
                        "id": 414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1938:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc6b85902536b0f8487034b3ecf1e60a795dc2f76885f36df68d2eea7b0bd42d",
                          "typeString": "literal_string \"only oracle\""
                        },
                        "value": "only oracle"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dc6b85902536b0f8487034b3ecf1e60a795dc2f76885f36df68d2eea7b0bd42d",
                          "typeString": "literal_string \"only oracle\""
                        }
                      ],
                      "id": 409,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1908:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1908:44:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 416,
                  "nodeType": "ExpressionStatement",
                  "src": "1908:44:3"
                },
                {
                  "expression": {
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 417,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 179,
                        "src": "1959:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$177_storage",
                          "typeString": "struct PredictionMarket.Result storage ref"
                        }
                      },
                      "id": 419,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "winner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 174,
                      "src": "1959:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$172",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 420,
                      "name": "_winner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 402,
                      "src": "1975:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$172",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "src": "1959:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$172",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "id": 422,
                  "nodeType": "ExpressionStatement",
                  "src": "1959:23:3"
                },
                {
                  "expression": {
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 423,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 179,
                        "src": "1989:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$177_storage",
                          "typeString": "struct PredictionMarket.Result storage ref"
                        }
                      },
                      "id": 425,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "loser",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 176,
                      "src": "1989:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$172",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 426,
                      "name": "_loser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 404,
                      "src": "2004:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$172",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "src": "1989:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$172",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "id": 428,
                  "nodeType": "ExpressionStatement",
                  "src": "1989:21:3"
                },
                {
                  "expression": {
                    "id": 431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 429,
                      "name": "gameisDone",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 181,
                      "src": "2017:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2030:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2017:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 432,
                  "nodeType": "ExpressionStatement",
                  "src": "2017:17:3"
                }
              ]
            },
            "functionSelector": "4ec942b7",
            "id": 434,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 407,
                "modifierName": {
                  "id": 406,
                  "name": "activeContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 465,
                  "src": "1884:14:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1884:16:3"
              }
            ],
            "name": "reportResult",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "mutability": "mutable",
                  "name": "_winner",
                  "nodeType": "VariableDeclaration",
                  "scope": 434,
                  "src": "1848:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$172",
                    "typeString": "enum PredictionMarket.Side"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "Side",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 172,
                    "src": "1848:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$172",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 404,
                  "mutability": "mutable",
                  "name": "_loser",
                  "nodeType": "VariableDeclaration",
                  "scope": 434,
                  "src": "1862:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$172",
                    "typeString": "enum PredictionMarket.Side"
                  },
                  "typeName": {
                    "id": 403,
                    "name": "Side",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 172,
                    "src": "1862:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$172",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1847:27:3"
            },
            "returnParameters": {
              "id": 408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1901:0:3"
            },
            "scope": 466,
            "src": "1826:214:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 454,
              "nodeType": "Block",
              "src": "2073:88:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 437,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2090:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2090:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 439,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "2104:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2104:7:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2090:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 453,
                  "nodeType": "IfStatement",
                  "src": "2087:65:3",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 447,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 100,
                                    "src": "2142:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 448,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2142:7:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 446,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2134:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint160_$",
                                  "typeString": "type(uint160)"
                                },
                                "typeName": {
                                  "id": 445,
                                  "name": "uint160",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2134:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 449,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2134:16:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            ],
                            "id": 444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2126:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 443,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2126:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2126:25:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 442,
                        "name": "selfdestruct",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -21,
                        "src": "2113:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                          "typeString": "function (address payable)"
                        }
                      },
                      "id": 451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2113:39:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 452,
                    "nodeType": "ExpressionStatement",
                    "src": "2113:39:3"
                  }
                }
              ]
            },
            "id": 455,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "kill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2057:2:3"
            },
            "returnParameters": {
              "id": 436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2073:0:3"
            },
            "scope": 466,
            "src": "2044:117:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 464,
              "nodeType": "Block",
              "src": "2190:43:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 458,
                          "name": "isActive",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 184,
                          "src": "2204:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2216:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2204:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 457,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2196:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2196:25:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 462,
                  "nodeType": "ExpressionStatement",
                  "src": "2196:25:3"
                },
                {
                  "id": 463,
                  "nodeType": "PlaceholderStatement",
                  "src": "2227:1:3"
                }
              ]
            },
            "id": 465,
            "name": "activeContract",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2187:2:3"
            },
            "src": "2164:69:3",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 467,
        "src": "54:2182:3"
      }
    ],
    "src": "0:2238:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.3+commit.9bfce1f6.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {
        "0x990c442e6adb818b8fa7db3cf1023decd07f7b66e5306928c7ed527d974192bb": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "accountAdress",
              "type": "address"
            }
          ],
          "name": "LogEnrolled",
          "type": "event"
        },
        "0xdb1f81b27a0cfe04c709176ef27f5b6ba5e3f9630c8138609a56ac7fdcac8cc7": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "accountAddress",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "LogPlaceBet",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xb4BEc337758D45CE3A2b6fF063C553906543e548",
      "transactionHash": "0x59f70353fcb600a6850078ca1fcedc0028ce8d3ff5102f4d8544c4e00678595f"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0x891f3F459b50e263a61eB52CA65194BC5a2cA060",
      "transactionHash": "0x9d79cd138cbf1a6e33a641073153b0d6ed3259f112cc6189d88ddb352927bd11"
    }
  },
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-11-26T22:01:36.349Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}